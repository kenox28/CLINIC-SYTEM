/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package clinic_system;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.awt.*;
import java.awt.print.*;
import javax.swing.*;
import com.formdev.flatlaf.IntelliJTheme;
import java.awt.Graphics;
import java.awt.print.Printable;
import java.awt.print.PrinterJob;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author USER
 */
public class MedicalCerWin extends javax.swing.JFrame {
    private String url = "jdbc:mysql://localhost:3306/geses";
    private String user = "root";
    private String pass = "";
    /**
     * Creates new form MedicalCerWin
     */
    public MedicalCerWin() {
        initComponents();
        fetchTableData();
    }
    private void fetchTableData() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Clear existing rows

        String query = "SELECT id , fullname, Symtoms,`condition` FROM medical_rec";

        try (Connection conn = DriverManager.getConnection(url, user, pass); PreparedStatement stmt = conn.prepareStatement(query); ResultSet rs = stmt.executeQuery()) {

            while (rs.next()) {
                Object[] row = {
                    rs.getInt("id"),
                    rs.getString("fullname"), // Full Name
                    rs.getString("Symtoms"), // Section
                    rs.getString("condition"), // Guardian Name
                };
                model.addRow(row); // Add the row to the table model
            }

        } catch (Exception e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Error fetching data: " + e.getMessage(),
                    "Database Error",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        datelabel1 = new javax.swing.JLabel();
        Patients = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        namepatient = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        datelabel2 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        Patients3 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        Patients4 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        conditionlabel1 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        conditionlabel2 = new javax.swing.JLabel();
        physcianLabel = new javax.swing.JLabel();
        physiciannumlabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        physicianField = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        physiciannumField = new javax.swing.JTextField();
        sumbit = new javax.swing.JButton();
        sumbit1 = new javax.swing.JButton();
        dateAdded = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        sumbit2 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setForeground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(816, 612));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clinic_system/favicon2.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 118, -1));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("EASTERN VISAYAS STATE UNIVERSITY");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 360, -1));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Attending Physician:");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 570, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("CLINIC MONITORING SYSTEM");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, 290, -1));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Date:");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, -1, -1));

        datelabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        datelabel1.setForeground(new java.awt.Color(0, 0, 0));
        datelabel1.setText("DATE ADDED");
        jPanel2.add(datelabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, -1, -1));

        Patients.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Patients.setForeground(new java.awt.Color(0, 0, 0));
        Patients.setText("the attending physician. Additionally, the student is advised to rest and avoid strenuous ");
        jPanel2.add(Patients, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 380, 500, -1));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("Ormoc Campus");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 70, -1, -1));

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("and has been diagnosed with a ");
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 320, 200, -1));

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("This is to certify that ");
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, 130, -1));

        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("to follow the prescribed and care as outlined by the attending physician.");
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 510, 500, -1));

        namepatient.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        namepatient.setForeground(new java.awt.Color(0, 0, 0));
        namepatient.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        namepatient.setText("name of the patient");
        jPanel2.add(namepatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 260, 170, -1));

        jLabel18.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("University (EVSU) Ormoc Campus, has been examined at the EVSU Medical Clinic on ");
        jPanel2.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, 520, -1));

        datelabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        datelabel2.setForeground(new java.awt.Color(0, 0, 0));
        datelabel2.setText("DATE ADDED");
        jPanel2.add(datelabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 320, 110, -1));

        jLabel19.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 0, 0));
        jLabel19.setText(" a student of the Eastern Visayas State ");
        jPanel2.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 260, 230, -1));

        Patients3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Patients3.setForeground(new java.awt.Color(0, 0, 0));
        Patients3.setText("activities for the prescribed period and to follow up with the clinic as needed.");
        jPanel2.add(Patients3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 410, 450, -1));

        jLabel20.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText("The patient has been advised to follow the prescribed treatment and care as outlined by ");
        jPanel2.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 350, -1, -1));

        Patients4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Patients4.setForeground(new java.awt.Color(0, 0, 0));
        Patients4.setText("Signature");
        jPanel2.add(Patients4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 680, 60, -1));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("MEDICAL CERTIFICATE");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, -1, -1));

        conditionlabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        conditionlabel1.setForeground(new java.awt.Color(0, 0, 0));
        conditionlabel1.setText("Condition");
        jPanel2.add(conditionlabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 320, 70, 20));

        jLabel21.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setText("The above-named student has been diagnosed with");
        jPanel2.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 480, 300, -1));

        jLabel22.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 0, 0));
        jLabel22.setText("and has been advised ");
        jPanel2.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 480, 130, -1));

        jLabel23.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 0));
        jLabel23.setText("Diagnosis:");
        jPanel2.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 450, -1, -1));

        conditionlabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        conditionlabel2.setForeground(new java.awt.Color(0, 0, 0));
        conditionlabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        conditionlabel2.setText("Condition");
        jPanel2.add(conditionlabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 480, 80, -1));

        physcianLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        physcianLabel.setForeground(new java.awt.Color(0, 0, 0));
        physcianLabel.setText("Physician's Name");
        jPanel2.add(physcianLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 600, 120, -1));

        physiciannumlabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        physiciannumlabel.setForeground(new java.awt.Color(0, 0, 0));
        physiciannumlabel.setText("Physician's Contact Information");
        jPanel2.add(physiciannumlabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 630, 200, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 0, 650, 792));

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 2, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 153));
        jLabel2.setText("MEDICAL CERTIFICATE");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 480, 290, -1));

        physicianField.setBackground(new java.awt.Color(204, 255, 204));
        physicianField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                physicianFieldActionPerformed(evt);
            }
        });
        jPanel1.add(physicianField, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 550, 271, 32));

        jLabel30.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(102, 102, 102));
        jLabel30.setText("Physician Name");
        jPanel1.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 530, 100, -1));

        jLabel28.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(102, 102, 102));
        jLabel28.setText("Physician Number");
        jPanel1.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 530, 120, -1));

        physiciannumField.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.add(physiciannumField, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 550, 271, 32));

        sumbit.setBackground(new java.awt.Color(0, 204, 153));
        sumbit.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        sumbit.setForeground(new java.awt.Color(102, 102, 102));
        sumbit.setText("Sumbit");
        sumbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumbitActionPerformed(evt);
            }
        });
        jPanel1.add(sumbit, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 640, 115, 30));

        sumbit1.setBackground(new java.awt.Color(0, 204, 153));
        sumbit1.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        sumbit1.setForeground(new java.awt.Color(102, 102, 102));
        sumbit1.setText("Back");
        sumbit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumbit1ActionPerformed(evt);
            }
        });
        jPanel1.add(sumbit1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 640, 115, 30));
        jPanel1.add(dateAdded, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 600, 270, 30));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 620, 340));

        sumbit2.setBackground(new java.awt.Color(0, 204, 153));
        sumbit2.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        sumbit2.setForeground(new java.awt.Color(102, 102, 102));
        sumbit2.setText("PRINT");
        sumbit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sumbit2ActionPerformed(evt);
            }
        });
        jPanel1.add(sumbit2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 640, 230, 30));
        jPanel1.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 440, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1300, 690));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void physicianFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_physicianFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_physicianFieldActionPerformed

    private void sumbitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumbitActionPerformed
        // TODO add your handling code here:
         SimpleDateFormat sdf = new SimpleDateFormat("yy-MM-dd");
         String dateAdded = sdf.format(this.dateAdded.getDate());
         
         System.out.println(dateAdded);
         this.datelabel2.setText(dateAdded);
         this.datelabel1.setText(dateAdded);
         int selected = jTable1.getSelectedRow();
        if (selected != -1) { // Use -1 to check if a row is selected
            try {
                Connection conn = DriverManager.getConnection(url, user, pass);

                int id = Integer.parseInt(jTable1.getValueAt(selected, 0).toString());
                String query = "SELECT * FROM medical_rec WHERE id = ?";
                PreparedStatement prstmt = conn.prepareStatement(query);
                prstmt.setInt(1, id);

                ResultSet rs = prstmt.executeQuery();
                if (rs.next()) {
                    String fullname = rs.getString("fullname");
                    String diagnosis = rs.getString("Symtoms");
                    
                    
                    this.physcianLabel.setText(this.physicianField.getText());
                    this.physiciannumlabel.setText(this.physiciannumField.getText());
                    this.conditionlabel2.setText(diagnosis);
                    this.conditionlabel1.setText(diagnosis);



                    this.datelabel2.setText(dateAdded);
                    this.datelabel1.setText(dateAdded);
                    this.namepatient.setText(fullname);
//                    String symtoms = this.SymtomsF.getText();
//                    String recentMedication = this.recentMedF.getText();
//                    String treatmentMed = this.treatmentGiven.getText();
                    

//                    String query2 = "INSERT INTO medical_rec(fullname, Symtoms, recentMedicationTaken, treatmentGiven,`condition`) VALUES (?, ?, ?, ?, ?)";
//                    PreparedStatement pstmt2 = conn.prepareStatement(query2);
//                    pstmt2.setString(1, fullname);
//                    pstmt2.setString(2, symtoms);
//                    pstmt2.setString(3, recentMedication);
//                    pstmt2.setString(4, treatmentMed);
//                    pstmt2.setString(5, condi);

//                    int rowsInserted = pstmt2.executeUpdate(); // Check rows affected

//                    if (rowsInserted > 0) {
//                        JOptionPane.showMessageDialog(this, "Record successfully added!", "Success", JOptionPane.INFORMATION_MESSAGE);
//                        ((DefaultTableModel) tableRecords.getModel()).removeRow(selected); // Remove row from table
//                    } else {
//                        JOptionPane.showMessageDialog(this, "Failed to add record.", "Error", JOptionPane.ERROR_MESSAGE);
//                    }

                } else {
                    JOptionPane.showMessageDialog(this, "No row found with the selected ID.", "Error", JOptionPane.ERROR_MESSAGE);
                }

            } catch (Exception e) {
                e.printStackTrace(); // Log error for debugging
                JOptionPane.showMessageDialog(this, "An error occurred: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No row selected.", "Error", JOptionPane.ERROR_MESSAGE);
        }
//        String studentID, fullName, section, guardianName, guardianNumber, contact;
//        int yearLevel, age;
//
//        // COde for empty input
//        if (fullname.getText().equals("") || guardName.getText().equals("")) {
//            JOptionPane.showMessageDialog(new JFrame(),
//                "Failed",
//                "Dialog",
//                JOptionPane.ERROR_MESSAGE);
//            return;
//        }
//
//        studentID = student_id.getText();
//        fullName = fullname.getText();
//        section = this.section.getText();
//        guardianName = guardName.getText();
//        guardianNumber = guardNumber.getText();
//        yearLevel = Integer.parseInt(yearlevel.getText());
//        contact = cont.getText();
//
//        try {
//            age = Integer.parseInt(ageField.getText());
//            yearLevel = Integer.parseInt(this.yearlevel.getText());
//        } catch (NumberFormatException e) {
//            // fhkfdans
//            return;
//        }
//
//        try (Connection connection = DatabaseConnection.getConection()) {
//            String sql = "INSERT INTO student_reg (studeid, fullname, year_level, "
//            + "section, age, contact, guardian_name, g_number) VALUES "
//            + "(?, ?, ?, ?, ?, ?, ?, ?)";
//            PreparedStatement stmt = connection.prepareStatement(sql);
//            stmt.setString(1, studentID);
//            stmt.setString(2, fullName);
//            stmt.setInt(3, yearLevel);
//            stmt.setString(4, section);
//            stmt.setInt(5, age);
//            stmt.setString(6, contact);
//            stmt.setString(7, guardianName);
//            stmt.setString(8, guardianNumber);
//
//            this.student_id.setText("");
//            this.fullname.setText("");
//            this.section.setText("");
//            this.guardName.setText("");
//            this.guardNumber.setText("");
//            this.cont.setText("");
//            this.yearlevel.setText("");
//            this.ageField.setText("");
//
//            stmt.execute();
//        } catch (SQLException e) {
//            e.printStackTrace();
//
//            return;
//        }
    }//GEN-LAST:event_sumbitActionPerformed

    private void sumbit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumbit1ActionPerformed
        // TODO add your handling code here:
        new mainWindow().setVisible(true);
        this.dispose();

    }//GEN-LAST:event_sumbit1ActionPerformed

    private void sumbit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sumbit2ActionPerformed
        // TODO add your handling code here:
        
        SimpleDateFormat sdf = new SimpleDateFormat("yy-MM-dd");
        String dateAdded = sdf.format(this.dateAdded.getDate());
         
        System.out.println(dateAdded);
        this.datelabel2.setText(dateAdded);
        this.datelabel1.setText(dateAdded);
        int selected = jTable1.getSelectedRow();
        if (selected != -1) { // Use -1 to check if a row is selected
            try {
                    Connection conn = DriverManager.getConnection(url, user, pass);

                    int id = Integer.parseInt(jTable1.getValueAt(selected, 0).toString());
                    String query = "SELECT * FROM medical_rec WHERE id = ?";
                    PreparedStatement prstmt = conn.prepareStatement(query);
                    prstmt.setInt(1, id);

                    ResultSet rs = prstmt.executeQuery();
                    if (rs.next()) {
                        String fullname = rs.getString("fullname");
                        String diagnosis = rs.getString("Symtoms");


                        String physicianname = this.physicianField.getText();
                        String physicianNum = this.physiciannumField.getText();
                        String diag = diagnosis;
                        String date = dateAdded;
                        




        //                    String symtoms = this.SymtomsF.getText();
        //                    String recentMedication = this.recentMedF.getText();
        //                    String treatmentMed = this.treatmentGiven.getText();


                            String query2 = "INSERT INTO issued_medical(fullname, diagnosis, physician, physician_num,dateadded) VALUES (?, ?, ?, ?, ?)";
                            PreparedStatement pstmt2 = conn.prepareStatement(query2);
                            pstmt2.setString(1, fullname);
                            pstmt2.setString(2, diag);
                            pstmt2.setString(3, physicianname);
                            pstmt2.setString(4, physicianNum);
                            pstmt2.setString(5, date);

                           int rowsInserted = pstmt2.executeUpdate(); // Check rows affected

                            if (rowsInserted > 0) {
                                JOptionPane.showMessageDialog(this, "Record successfully added!", "Success", JOptionPane.INFORMATION_MESSAGE);
//                                ((DefaultTableModel) tableRecords.getModel()).removeRow(selected); // Remove row from table
                            } else {
                                JOptionPane.showMessageDialog(this, "Failed to add record.", "Error", JOptionPane.ERROR_MESSAGE);
                            }

                    } else {
                        JOptionPane.showMessageDialog(this, "No row found with the selected ID.", "Error", JOptionPane.ERROR_MESSAGE);
                    }

                } catch (Exception e) {
                    e.printStackTrace(); // Log error for debugging
                    JOptionPane.showMessageDialog(this, "An error occurred: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
            JOptionPane.showMessageDialog(this, "No row selected.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            PrinterJob printerJob = PrinterJob.getPrinterJob();

            // Set the printable content (your panel)
            printerJob.setPrintable(new Printable() {
                @Override
                public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
                    if (pageIndex > 0) {
                        return Printable.NO_SUCH_PAGE;
                    }

                    // Translate the graphics to match the printable area
                    Graphics2D g2d = (Graphics2D) graphics;
                    g2d.translate(pageFormat.getImageableX(), pageFormat.getImageableY());

                    // Print the panel (replace jPanel1 with your panel)
                    jPanel2.printAll(graphics);

                    return Printable.PAGE_EXISTS;
                }
            });

            // Show the print dialog and print if approved
            boolean doPrint = printerJob.printDialog();
            if (doPrint) {
                try {
                    printerJob.print();
                } catch (PrinterException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Print failed: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
    }//GEN-LAST:event_sumbit2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MedicalCerWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MedicalCerWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MedicalCerWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MedicalCerWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MedicalCerWin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Patients;
    private javax.swing.JLabel Patients3;
    private javax.swing.JLabel Patients4;
    private javax.swing.JLabel conditionlabel1;
    private javax.swing.JLabel conditionlabel2;
    private com.toedter.calendar.JDateChooser dateAdded;
    private javax.swing.JLabel datelabel1;
    private javax.swing.JLabel datelabel2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel namepatient;
    private javax.swing.JLabel physcianLabel;
    private javax.swing.JTextField physicianField;
    private javax.swing.JTextField physiciannumField;
    private javax.swing.JLabel physiciannumlabel;
    private javax.swing.JButton sumbit;
    private javax.swing.JButton sumbit1;
    private javax.swing.JButton sumbit2;
    // End of variables declaration//GEN-END:variables
}
