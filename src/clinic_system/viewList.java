/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package clinic_system;

import com.formdev.flatlaf.IntelliJTheme;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class viewList extends javax.swing.JFrame {

    private String url = "jdbc:mysql://localhost:3306/geses";
    private String user = "root";
    private String pass = "";

    /**
     * Creates new form viewList
     */
    public viewList() {
        initComponents();
        fetchTableData();

    }

    private void fetchTableData() {
        DefaultTableModel model = (DefaultTableModel) tableRecords.getModel();
        model.setRowCount(0); // Clear existing rows

        String query = "SELECT id ,studeid, fullname, year_level, section, age, contact, guardian_name, g_number FROM student_reg";

        try (Connection conn = DriverManager.getConnection(url, user, pass); PreparedStatement stmt = conn.prepareStatement(query); ResultSet rs = stmt.executeQuery()) {

            while (rs.next()) {
                Object[] row = {
                    rs.getInt("id"),
                    rs.getString("studeid"), // Student ID
                    rs.getString("fullname"), // Full Name
                    rs.getInt("year_level"), // Year Level
                    rs.getString("section"), // Section
                    rs.getInt("age"), // Age
                    rs.getString("contact"), // Contact
                    rs.getString("guardian_name"), // Guardian Name
                    rs.getString("g_number") // Guardian Number
                };
                model.addRow(row); // Add the row to the table model
            }

        } catch (Exception e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Error fetching data: " + e.getMessage(),
                    "Database Error",
                    javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableRecords = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        SymtomsF = new javax.swing.JTextField();
        recentMedF = new javax.swing.JTextField();
        treatmentGiven = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        serCon = new javax.swing.JRadioButton();
        mildCon = new javax.swing.JRadioButton();
        seachfield = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        Searchbtn = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setForeground(new java.awt.Color(0, 204, 153));
        jPanel1.setLayout(null);

        tableRecords.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "Student ID", "Full Name", "Year Level", "Section", "Age", "Contact Number", "Guardian Name", "Guardian Number"
            }
        ));
        jScrollPane1.setViewportView(tableRecords);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(460, 190, 1000, 480);

        jPanel2.setBackground(new java.awt.Color(153, 255, 153));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Treatment Given:");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 110, 30));

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Symptoms/Reason for Visit:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 210, 30));

        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Recent Medication Taken:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 170, 30));

        jButton1.setBackground(new java.awt.Color(0, 204, 153));
        jButton1.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jButton1.setText("Submit");
        jButton1.setActionCommand("Sumbit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 450, 230, 40));

        SymtomsF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SymtomsFActionPerformed(evt);
            }
        });
        jPanel2.add(SymtomsF, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 350, 40));

        recentMedF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recentMedFActionPerformed(evt);
            }
        });
        jPanel2.add(recentMedF, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 350, 40));

        treatmentGiven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                treatmentGivenActionPerformed(evt);
            }
        });
        jPanel2.add(treatmentGiven, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 350, 40));

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 2, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 204, 153));
        jLabel3.setText("Health Information");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 320, 40));

        buttonGroup1.add(serCon);
        serCon.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        serCon.setForeground(new java.awt.Color(102, 102, 102));
        serCon.setText("SERIOUS CONDITION");
        jPanel2.add(serCon, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 340, -1, -1));

        buttonGroup1.add(mildCon);
        mildCon.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        mildCon.setForeground(new java.awt.Color(102, 102, 102));
        mildCon.setText("MIlD CONDITION");
        jPanel2.add(mildCon, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, -1));

        jPanel1.add(jPanel2);
        jPanel2.setBounds(20, 140, 410, 540);
        jPanel1.add(seachfield);
        seachfield.setBounds(1060, 130, 310, 40);

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 2, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 204, 153));
        jLabel6.setText("Select from Records");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(460, 150, 227, 30);

        Searchbtn.setBackground(new java.awt.Color(0, 255, 255));
        Searchbtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Searchbtn.setText("Seach");
        Searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchbtnActionPerformed(evt);
            }
        });
        jPanel1.add(Searchbtn);
        Searchbtn.setBounds(1380, 130, 80, 40);

        jPanel4.setBackground(new java.awt.Color(153, 255, 153));
        jPanel4.setLayout(null);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Ormoc Campus");
        jPanel4.add(jLabel7);
        jLabel7.setBounds(160, 40, 370, 30);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("EASTERN VISAYAS STATE UNIVERSITY");
        jPanel4.add(jLabel8);
        jLabel8.setBounds(160, 10, 490, 30);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clinic_system/favicon2.png"))); // NOI18N
        jLabel9.setText("jLabel7");
        jPanel4.add(jLabel9);
        jLabel9.setBounds(30, 0, 120, 120);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clinic_system/icons8-back-arrow-50.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton3);
        jButton3.setBounds(1420, 10, 56, 40);

        jPanel1.add(jPanel4);
        jPanel4.setBounds(0, 0, 1500, 120);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1500, 700));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void treatmentGivenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_treatmentGivenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_treatmentGivenActionPerformed

    private void SymtomsFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SymtomsFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SymtomsFActionPerformed

    private void recentMedFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recentMedFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_recentMedFActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        
    // TODO add your handling code here:

        int selected = tableRecords.getSelectedRow();
        if (selected != -1) { // Use -1 to check if a row is selected
            try {
                Connection conn = DriverManager.getConnection(url, user, pass);

                int id = Integer.parseInt(tableRecords.getValueAt(selected, 0).toString());
                String query = "SELECT * FROM student_reg WHERE id = ?";
                PreparedStatement prstmt = conn.prepareStatement(query);
                prstmt.setInt(1, id);

                ResultSet rs = prstmt.executeQuery();
                if (rs.next()) {
                    String fullname = rs.getString("fullname");
                    String symtoms = this.SymtomsF.getText();
                    String recentMedication = this.recentMedF.getText();
                    String treatmentMed = this.treatmentGiven.getText();
                    String condi = null;

                    if (mildCon.isSelected()) {
                        condi = "Mild Condition";
                    } else if (serCon.isSelected()) {
                        condi = "Serious Condition";
                    } else {
                        JOptionPane.showMessageDialog(this, "Select What kind of Condition", "Error", JOptionPane.ERROR_MESSAGE);
                        return;
                    }

                    String query2 = "INSERT INTO medical_rec(fullname, Symtoms, recentMedicationTaken, treatmentGiven,`condition`) VALUES (?, ?, ?, ?, ?)";
                    PreparedStatement pstmt2 = conn.prepareStatement(query2);
                    pstmt2.setString(1, fullname);
                    pstmt2.setString(2, symtoms);
                    pstmt2.setString(3, recentMedication);
                    pstmt2.setString(4, treatmentMed);
                    pstmt2.setString(5, condi);

                    int rowsInserted = pstmt2.executeUpdate(); // Check rows affected

                    if (rowsInserted > 0) {
                        JOptionPane.showMessageDialog(this, "Record successfully added!", "Success", JOptionPane.INFORMATION_MESSAGE);
                        ((DefaultTableModel) tableRecords.getModel()).removeRow(selected); // Remove row from table
                    } else {
                        JOptionPane.showMessageDialog(this, "Failed to add record.", "Error", JOptionPane.ERROR_MESSAGE);
                    }

                } else {
                    JOptionPane.showMessageDialog(this, "No row found with the selected ID.", "Error", JOptionPane.ERROR_MESSAGE);
                }

            } catch (Exception e) {
                e.printStackTrace(); // Log error for debugging
                JOptionPane.showMessageDialog(this, "An error occurred: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "No row selected.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void SearchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchbtnActionPerformed
        // TODO add your handling code here:
        String searchText = seachfield.getText().trim(); // Get text from search field
        DefaultTableModel model = (DefaultTableModel) tableRecords.getModel();
        model.setRowCount(0); // Clear existing rows

        String query = "SELECT id, studeid, fullname, year_level, section, age, contact, guardian_name, g_number "
                + "FROM student_reg WHERE fullname LIKE ? OR studeid LIKE ? OR year_level LIKE ? OR section LIKE ?";

        try (Connection conn = DriverManager.getConnection(url, user, pass); PreparedStatement stmt = conn.prepareStatement(query)) {

            // Set search text for the query
            String searchPattern = "%" + searchText + "%";
            stmt.setString(1, searchPattern); // Search in 'fullname'
            stmt.setString(2, searchPattern); // Search in 'studeid'
            stmt.setString(3, searchPattern); // Search in 'studeid'
            stmt.setString(4, searchPattern); // Search in 'studeid'

            try (ResultSet rs = stmt.executeQuery()) {
                while (rs.next()) {
                    Object[] row = {
                        rs.getInt("id"),
                        rs.getString("studeid"),
                        rs.getString("fullname"),
                        rs.getInt("year_level"),
                        rs.getString("section"),
                        rs.getInt("age"),
                        rs.getString("contact"),
                        rs.getString("guardian_name"),
                        rs.getString("g_number")
                    };
                    model.addRow(row); // Add the filtered rows to the table model
                }
            }

            // Show a message if no records are found
            if (model.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "No matching records found.", "Search Result", JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_SearchbtnActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        mainWindow num = new mainWindow();
        num.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        IntelliJTheme.setup(mainWindow.class.getResourceAsStream("/nord.theme.json"));

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new viewList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Searchbtn;
    private javax.swing.JTextField SymtomsF;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton mildCon;
    private javax.swing.JTextField recentMedF;
    private javax.swing.JTextField seachfield;
    private javax.swing.JRadioButton serCon;
    private javax.swing.JTable tableRecords;
    private javax.swing.JTextField treatmentGiven;
    // End of variables declaration//GEN-END:variables
}
