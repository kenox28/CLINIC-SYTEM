/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package clinic_system;
import com.formdev.flatlaf.IntelliJTheme;
import java.sql.Connection;
import java.sql.SQLException;

import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class studentInfoWindow extends javax.swing.JFrame {
    private String url = "jdbc:mysql://localhost:3306/geses";
    private String user = "root";
    private String pass = "";
    /**
     * Creates new form studentInfoWindow
     */
    public studentInfoWindow() {
        initComponents();
        fetchTableData();
    }
    private void fetchTableData() {
        DefaultTableModel model = (DefaultTableModel) tableRecords.getModel();
        model.setRowCount(0); // Clear existing rows

        String query = "SELECT id ,studeid, fullname, year_level, section, age, contact, guardian_name, g_number FROM student_reg";

        try (Connection conn = DriverManager.getConnection(url, user, pass);
             PreparedStatement stmt = conn.prepareStatement(query);
             ResultSet rs = stmt.executeQuery()) {

            while (rs.next()) {
                Object[] row = {
                    rs.getInt("id"),
                    rs.getString("studeid"),         // Student ID
                    rs.getString("fullname"),       // Full Name
                    rs.getInt("year_level"),        // Year Level
                    rs.getString("section"),        // Section
                    rs.getInt("age"),               // Age
                    rs.getString("contact"),        // Contact
                    rs.getString("guardian_name"),  // Guardian Name
                    rs.getString("g_number")        // Guardian Number
                };
                model.addRow(row); // Add the row to the table model
            }

        } catch (Exception e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this,
                "Error fetching data: " + e.getMessage(),
                "Database Error",
                javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        updatBtn = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        student_id = new javax.swing.JTextField();
        fullname = new javax.swing.JTextField();
        yearlevel = new javax.swing.JTextField();
        section = new javax.swing.JTextField();
        ageField = new javax.swing.JTextField();
        cont = new javax.swing.JTextField();
        guardName = new javax.swing.JTextField();
        guardNumber = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableRecords = new javax.swing.JTable();
        seachfield = new javax.swing.JTextField();
        Searchbtn = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setLayout(null);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Ormoc Campus");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(160, 40, 370, 30);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("EASTERN VISAYAS STATE UNIVERSITY");
        jPanel2.add(jLabel8);
        jLabel8.setBounds(160, 10, 490, 30);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clinic_system/favicon2.png"))); // NOI18N
        jLabel7.setText("jLabel7");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(30, 0, 120, 120);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clinic_system/icons8-back-arrow-50.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3);
        jButton3.setBounds(1350, 10, 56, 40);

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1420, 120));

        deleteBtn.setBackground(new java.awt.Color(0, 255, 255));
        deleteBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(51, 51, 51));
        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        jPanel1.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 610, 380, 40));

        updatBtn.setBackground(new java.awt.Color(0, 255, 255));
        updatBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        updatBtn.setForeground(new java.awt.Color(51, 51, 51));
        updatBtn.setText("Update");
        updatBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatBtnActionPerformed(evt);
            }
        });
        jPanel1.add(updatBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 610, 390, 40));

        jPanel5.setBackground(new java.awt.Color(204, 255, 204));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        student_id.setBackground(new java.awt.Color(204, 255, 204));
        student_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                student_idActionPerformed(evt);
            }
        });
        jPanel5.add(student_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 290, 32));

        fullname.setBackground(new java.awt.Color(204, 255, 204));
        jPanel5.add(fullname, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 290, 32));

        yearlevel.setBackground(new java.awt.Color(204, 255, 204));
        jPanel5.add(yearlevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 290, 32));

        section.setBackground(new java.awt.Color(204, 255, 204));
        jPanel5.add(section, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 290, 32));

        ageField.setBackground(new java.awt.Color(204, 255, 204));
        jPanel5.add(ageField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 290, 32));

        cont.setBackground(new java.awt.Color(204, 255, 204));
        jPanel5.add(cont, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 290, 32));

        guardName.setBackground(new java.awt.Color(204, 255, 204));
        jPanel5.add(guardName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, 290, 32));

        guardNumber.setBackground(new java.awt.Color(204, 255, 204));
        jPanel5.add(guardNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 460, 290, 40));

        jLabel17.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(102, 102, 102));
        jLabel17.setText("Student ID");
        jPanel5.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 70, -1));

        jLabel15.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(102, 102, 102));
        jLabel15.setText("Full Name");
        jPanel5.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 70, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("Year Level");
        jPanel5.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("Coure/Section");
        jPanel5.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 92, -1));

        jLabel16.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(102, 102, 102));
        jLabel16.setText("Age");
        jPanel5.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 92, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setText("Contact Number");
        jPanel5.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, 120, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 102, 102));
        jLabel12.setText("Guardian's Name");
        jPanel5.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 115, -1));

        jLabel13.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(102, 102, 102));
        jLabel13.setText("Guardian's  Number");
        jPanel5.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, 140, -1));

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 340, 520));

        tableRecords.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "Student ID", "Full Name", "Year Level", "Section", "Age", "Contact Number", "Guardian Name", "Guardian Number"
            }
        ));
        jScrollPane1.setViewportView(tableRecords);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 180, 1050, 410));
        jPanel1.add(seachfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 130, 260, 40));

        Searchbtn.setBackground(new java.awt.Color(0, 255, 255));
        Searchbtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Searchbtn.setText("Seach");
        Searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchbtnActionPerformed(evt);
            }
        });
        jPanel1.add(Searchbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1320, 130, 80, 40));

        jLabel14.setFont(new java.awt.Font("Segoe UI Semibold", 2, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 204, 153));
        jLabel14.setText("Select from Records");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 150, 227, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1420, 680));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void student_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_student_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_student_idActionPerformed

    private void SearchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchbtnActionPerformed
        // TODO add your handling code here:
        String searchText = seachfield.getText().trim(); // Get text from search field
        DefaultTableModel model = (DefaultTableModel) tableRecords.getModel();
        model.setRowCount(0); // Clear existing rows

        String query = "SELECT id, studeid, fullname, year_level, section, age, contact, guardian_name, g_number " +
        "FROM student_reg WHERE fullname LIKE ? OR studeid LIKE ? OR year_level LIKE ? OR section LIKE ?";

        try (Connection conn = DriverManager.getConnection(url, user, pass);
            PreparedStatement stmt = conn.prepareStatement(query)) {

            // Set search text for the query
            String searchPattern = "%" + searchText + "%";
            stmt.setString(1, searchPattern); // Search in 'fullname'
            stmt.setString(2, searchPattern); // Search in 'studeid'
            stmt.setString(3, searchPattern); // Search in 'studeid'
            stmt.setString(4, searchPattern); // Search in 'studeid'

            try (ResultSet rs = stmt.executeQuery()) {
                while (rs.next()) {
                    Object[] row = {
                        rs.getInt("id"),
                        rs.getString("studeid"),
                        rs.getString("fullname"),
                        rs.getInt("year_level"),
                        rs.getString("section"),
                        rs.getInt("age"),
                        rs.getString("contact"),
                        rs.getString("guardian_name"),
                        rs.getString("g_number")
                    };
                    model.addRow(row); // Add the filtered rows to the table model
                }
            }

            // Show a message if no records are found
            if (model.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "No matching records found.", "Search Result", JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_SearchbtnActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        mainWindow num = new mainWindow ();
        num.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jButton3ActionPerformed

    private void updatBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableRecords.getSelectedRow();

        // Ensure a row is selected
        if (selectedRow == -0) {
            JOptionPane.showMessageDialog(this, "Please select a row to update.", "No Selection", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Fetch ID from the table (assumes the first column is ID)
        int id = (int) tableRecords.getValueAt(selectedRow, 0);

        // Retrieve updated data from text fields
        String studentId = student_id.getText();
        String fullName = fullname.getText();
        int yearLevel = Integer.parseInt(yearlevel.getText());
        String sectionValue = section.getText();
        int age = Integer.parseInt(ageField.getText());
        String contact = cont.getText();
        String guardianName = guardName.getText();
        String guardianNumber = guardNumber.getText();

        // SQL Update Query
        String query = "UPDATE student_reg SET studeid = ?, fullname = ?, year_level = ?, section = ?, age = ?, contact = ?, guardian_name = ?, g_number = ? WHERE id = ?";

        try (Connection conn = DriverManager.getConnection(url, user, pass);
             PreparedStatement stmt = conn.prepareStatement(query)) {

            // Bind parameters
            stmt.setString(1, studentId);
            stmt.setString(2, fullName);
            stmt.setInt(3, yearLevel);
            stmt.setString(4, sectionValue);
            stmt.setInt(5, age);
            stmt.setString(6, contact);
            stmt.setString(7, guardianName);
            stmt.setString(8, guardianNumber);
            stmt.setInt(9, id);

            // Execute update
            int rowsAffected = stmt.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Record updated successfully.", "Update Successful", JOptionPane.INFORMATION_MESSAGE);
                fetchTableData(); // Refresh table data
            } else {
                JOptionPane.showMessageDialog(this, "No rows were updated. Please try again.", "Update Failed", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error updating record: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
        this.student_id.setText("");
        this.fullname.setText("");
        this.section.setText("");
        this.guardName.setText("");
        this.guardNumber.setText("");
        this.cont.setText("");
        this.yearlevel.setText("");
        this.ageField.setText("");
    }//GEN-LAST:event_updatBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableRecords.getSelectedRow();

        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this item?", "Confirm Delete", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                try {
                    // Assuming your table model holds the ID of the record in the first column
                    int recordId = (int) tableRecords.getValueAt(selectedRow, 0); // Adjust index as needed

                    // Establish database connection
                    Connection conn = DriverManager.getConnection(url,user,pass);
                    String sql = "DELETE FROM student_reg WHERE id = ?";

                    PreparedStatement stmt = conn.prepareStatement(sql);
                    stmt.setInt(1, recordId);
                    stmt.executeUpdate();

                    // Remove the row from the JTable
                    DefaultTableModel model = (DefaultTableModel) tableRecords.getModel();
                    model.removeRow(selectedRow);

                    JOptionPane.showMessageDialog(this, "Record deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);

                    stmt.close();
                    conn.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Error deleting record: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(studentInfoWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(studentInfoWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(studentInfoWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(studentInfoWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        IntelliJTheme.setup(mainWindow.class.getResourceAsStream("/nord.theme.json"));

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new studentInfoWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Searchbtn;
    private javax.swing.JTextField ageField;
    private javax.swing.JTextField cont;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField fullname;
    private javax.swing.JTextField guardName;
    private javax.swing.JTextField guardNumber;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField seachfield;
    private javax.swing.JTextField section;
    private javax.swing.JTextField student_id;
    private javax.swing.JTable tableRecords;
    private javax.swing.JButton updatBtn;
    private javax.swing.JTextField yearlevel;
    // End of variables declaration//GEN-END:variables
}
